version: '3'

volumes:
  pgdatasource:
  pgadmin-data:

services:
  authors-db:
    image: postgres
    restart: always
    environment:
     - DATABASE_HOST=127.0.0.1
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=docker
     - POSTGRES_PORT=5432
     - POSTGRES_DB=authors
    ports:
     - '5432:5432'
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
    volumes:
      - pgdatasource:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: phillip.witkin@galvanize.com
      PGADMIN_DEFAULT_PASSWORD: docker
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8086:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - authors-db


  authors-api:
    build: api/
    depends_on:
      authors-db:
        condition: service_healthy
    ports:
      - '8080:8082'
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=authors-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_DB=authors
    volumes:
      - type: bind
        source: ./api
        target: /app
    command: npm run start:dev

  authors-ui:
    build: ui/
    depends_on:
      - 'authors-api'
    ports:
      - '3001:5173'
    volumes:
      - type: bind
        source: ./ui/src
        target: /app/src
